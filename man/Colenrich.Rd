% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Colenrich.R
\name{Colenrich}
\alias{Colenrich}
\title{Colenrich: Integrative GO Enrichment and Community Detection}
\usage{
Colenrich(data, ID = "ENSEMBL", organism = "Mouse", resolution = 1.1)
}
\arguments{
\item{data}{A data frame in which each column represents a group containing gene identifiers.}

\item{ID}{A character string specifying the gene identifier type (e.g., "ENSEMBL"). Default is "ENSEMBL".}

\item{organism}{A character string specifying the organism. Allowed values are "Human" or "Mouse". Default is "Mouse".}
}
\value{
A list containing:
\describe{
\item{merged_df}{A data frame of merged enrichment results containing common GO terms.}
\item{community}{An igraph community object resulting from Louvain community detection.}
\item{membership_df}{A data frame of graph nodes with their assigned community memberships.}
\item{gene_function}{A data frame of nodes that correspond to GO terms.}
}
}
\description{
Performs GO enrichment analysis and community detection by integrating known gene functions from Gene Ontology (GO)
across multiple datasets. For each group (column) in the input data, the function retrieves GO annotations using
the appropriate organism annotation database, identifies the common GO terms across groups, and constructs a graph
based on these common terms. Louvain community detection is then applied to identify functionally connected modules.
}
\examples{
\dontrun{
# Example input: a data frame with two groups of gene identifiers
gene_data <- data.frame(
  group1 = c("ENSG000001", "ENSG000002", "ENSG000003"),
  group2 = c("ENSG000002", "ENSG000003", "ENSG000004"),
  stringsAsFactors = FALSE
)
# For human data, ensure that the org.Hs.eg.db package is installed.
result <- Colenrich(gene_data, ID = "ENSEMBL", organism = "Human")
print(result$merged_df)
print(result$membership_df)
print(result$gene_function)
}

}
